'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class jburrowsEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=jburrowsEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property Addresses() As DbSet(Of Address)
    Public Overridable Property Authors() As DbSet(Of Author)
    Public Overridable Property Books() As DbSet(Of Book)
    Public Overridable Property Categories() As DbSet(Of Category)
    Public Overridable Property Customers() As DbSet(Of Customer)
    Public Overridable Property OrderLines() As DbSet(Of OrderLine)
    Public Overridable Property Orders() As DbSet(Of Order)
    Public Overridable Property OrderStatus() As DbSet(Of OrderStatu)
    Public Overridable Property AllActiveBooks() As DbSet(Of AllActiveBook)
    Public Overridable Property AllOpenOrders() As DbSet(Of AllOpenOrder)
    Public Overridable Property BookCategories() As DbSet(Of BookCategory)
    Public Overridable Property Files() As DbSet(Of File)

    Public Overridable Function Associate_Category(bookID As Nullable(Of Integer), categoryID As Nullable(Of Integer)) As Integer
        Dim bookIDParameter As ObjectParameter = If(bookID.HasValue, New ObjectParameter("BookID", bookID), New ObjectParameter("BookID", GetType(Integer)))

        Dim categoryIDParameter As ObjectParameter = If(categoryID.HasValue, New ObjectParameter("CategoryID", categoryID), New ObjectParameter("CategoryID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Associate_Category", bookIDParameter, categoryIDParameter)
    End Function

    Public Overridable Function CreateOrder(customerID As Nullable(Of Integer), newIdentity As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim customerIDParameter As ObjectParameter = If(customerID.HasValue, New ObjectParameter("CustomerID", customerID), New ObjectParameter("CustomerID", GetType(Integer)))

        Dim newIdentityParameter As ObjectParameter = If(newIdentity.HasValue, New ObjectParameter("NewIdentity", newIdentity), New ObjectParameter("NewIdentity", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("CreateOrder", customerIDParameter, newIdentityParameter)
    End Function

    Public Overridable Function NewOrderLine(orderID As Nullable(Of Integer), book As Nullable(Of Integer), quantity As Nullable(Of Integer)) As Integer
        Dim orderIDParameter As ObjectParameter = If(orderID.HasValue, New ObjectParameter("OrderID", orderID), New ObjectParameter("OrderID", GetType(Integer)))

        Dim bookParameter As ObjectParameter = If(book.HasValue, New ObjectParameter("Book", book), New ObjectParameter("Book", GetType(Integer)))

        Dim quantityParameter As ObjectParameter = If(quantity.HasValue, New ObjectParameter("Quantity", quantity), New ObjectParameter("Quantity", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("NewOrderLine", orderIDParameter, bookParameter, quantityParameter)
    End Function

    Public Overridable Function OrderDetails(orderID As Nullable(Of Integer)) As ObjectResult(Of OrderDetails_Result)
        Dim orderIDParameter As ObjectParameter = If(orderID.HasValue, New ObjectParameter("OrderID", orderID), New ObjectParameter("OrderID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of OrderDetails_Result)("OrderDetails", orderIDParameter)
    End Function

    Public Overridable Function SalesPerDay(startDate As Nullable(Of Date), endDate As Nullable(Of Date)) As ObjectResult(Of SalesPerDay_Result)
        Dim startDateParameter As ObjectParameter = If(startDate.HasValue, New ObjectParameter("StartDate", startDate), New ObjectParameter("StartDate", GetType(Date)))

        Dim endDateParameter As ObjectParameter = If(endDate.HasValue, New ObjectParameter("EndDate", endDate), New ObjectParameter("EndDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of SalesPerDay_Result)("SalesPerDay", startDateParameter, endDateParameter)
    End Function

    Public Overridable Function SelectOrderLines(orderID As Nullable(Of Integer)) As ObjectResult(Of SelectOrderLines_Result)
        Dim orderIDParameter As ObjectParameter = If(orderID.HasValue, New ObjectParameter("OrderID", orderID), New ObjectParameter("OrderID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of SelectOrderLines_Result)("SelectOrderLines", orderIDParameter)
    End Function

    Public Overridable Function BooksByAuthor(authorID As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim authorIDParameter As ObjectParameter = If(authorID.HasValue, New ObjectParameter("AuthorID", authorID), New ObjectParameter("AuthorID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("BooksByAuthor", authorIDParameter)
    End Function

    Public Overridable Function SelectBookCategories() As ObjectResult(Of SelectBookCategories_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of SelectBookCategories_Result)("SelectBookCategories")
    End Function

End Class
